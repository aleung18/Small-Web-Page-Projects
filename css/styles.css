/* Font gra bed from Google Fonts, Lato, Light 300 */
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');

/* CSS Property (variables) */
/* we define one with a scope. here we're using a root scope which means we can use this anywhere */
:root {
    --primary-color: #047aed; /* "--" is the syntax for custom properties */
    --secondary-color: #1c3fa8;
    --dark-color: #002240;
    --light-color: #f4f4f4;
    --success-color: #5cb85c;
    --error-color: #d9534f;
}

/* Reset */
* {
    box-sizing: border-box; /* allows us to add padding and borders without having to add to the width of an element */ 
    padding: 0;
    margin: 0;
    /* Removes all padding and margin on every element */
}

body {
    font-family: 'Lato', 'sans-serif';
    color: #333;
    line-height: 1.6; /* Adds space between lines */
}

ul {
    list-style-type: none;
}

a {
    text-decoration: none;
    color: #333;
} 

h1, h2 {
    font-weight: 300; /* 400 is the same as normal, 700 same as bold */
    line-height: 1.2;
    margin: 10px 0; /* top and bottom margin is 10px, right and left 0 */
}

p {
    margin: 10px 0;
}

img {
    width: 100%; /* Keeps images within their container */
}

code, pre {
    background: #333;
    color: #fff;
    padding: 10px;
    border-radius: 5px;
}

.hidden {
    visibility: hidden;
    height: 0;
}

/* Navbar */
.navbar {
    background-color: var(--primary-color); /* "var(--primary-color) is a CSS custom property (variable)" */
    color: #fff;
    height: 70px;
}

.navbar ul {
    display: flex;
}

.navbar a {
    color: white;
    padding: 10px;
    margin: 0 5px;
}

.navbar a:hover {
    border-bottom: 2px #fff solid;
}

/* most likely, justify-content is going to be center */
/* states that if flex is in the navbar, we will have space between, otherwise it will be center */
.navbar .flex {
    justify-content: space-between;
}

/* Showcase */
.showcase { /* changes the first item (showcase-text) */
    height: 400px;
    background-color: var(--primary-color);
    color: #fff;
    position: relative;
}

.showcase h1 {
    font-size: 40px;
}

.showcase p {
    margin: 20px 0;
}

.showcase .grid {
    grid-template-columns: 55% 45%; /* left item is now going to be slightly wider than the right item */
    gap: 30px; /* adding more gap */
    overflow: visible; /* fixes the overflow of the card item (showcase-form) */
}

.showcase-text {
    animation: slideInFromLeft 1s ease-in;
}

.showcase-form {
    position: relative;
    top: 60px; /* shifts the form 60px down */
    height: 350px; /* this makes the form go past its container, resulting in a scroll-bar appearing */
    width: 400px;
    padding: 40px;
    z-index: 100; /* makes it so that element is always in front */
    justify-self: flex-end; /* pushes form to the right */
    animation: slideInFromRight 1s ease-in;
}

.showcase-form .form-control { /* inputs */
    margin: 30px 0;
}

.showcase-form input[type='text'], .showcase-form input[type='email'] { /* cannot just use input because the submit button is also an input */
    border: 0;
    border-bottom: 1px solid #b4becb;
    width: 100%;
    font-size: 16px;
    padding: 3px;
}

/* removes border when we click on the inputs */
.showcase-form input:focus {
    outline: none;
}

/* Skewed Area/Slant */
/* before and after pseudo selectors */
.showcase::before, .showcase::after {
    content: '';
    position: absolute; /* positioned absolute within the relative position of showcase; essentially, it overlaps the showcase */
    height: 100px;
    bottom: -70px; /* we want to go below the bottom of the showcase */
    right: 0;
    left: 0;
    background-color: #fff;
    transform: skewY(-3deg); /* this gives us our slant */
    -webkit-transform: skewY(-3deg);
    -moz-transform: skewY(-3deg);
    -ms-transform: skewY(-3deg);
    /* three lines above is so that the slant appears/works for all browsers. webkit is chrome and safari, moz is mozilla, and ms is microsoft */
}

/* Stats */

.stats {
    padding-top: 100px;
    animation: slideInFromBottom 1s ease-in;
}

.stats-heading {
    max-width: 500px; /* squeezes the heading in */
    margin: auto; /* centers the heading */
}

.stats .grid h3 {
    font-size: 35px;
}

.stats .grid p {
    font-size: 20px;
    font-weight: bold;
}

/* Cli */
.cli .grid {
    /* The below sets a up a 3 column by 2 row grid */
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

/* "*:first-child" means "anything that is the first child." in this case, it is our image */
.cli .grid >*:first-child {
    grid-column: 1 / span 2; /* want the item from go from 1 column and span across 2 */
    grid-row: 1 / span 2; /* want the item from go from 1 row and span across 2 */
}

/* Cloud */
.cloud .grid {
    grid-template-columns: 4fr 3fr; /* by default set to 1fr 1fr */
}

/* Languages */
.languages .flex {
    flex-wrap: wrap; /* more of a responsive thing, when page shrinks the cards will go onto the next line */
}

.languages .card {
    text-align: center;
    margin: 18px 10px 40px;
    transition: transform 0.2s ease-in; /* adds a transition to our transform property; card moves up slower and move fluidly */
}

.languages .card h4 {
    font-size: 20px;
    margin-bottom: 10px;
}

.languages .card:hover {
    transform: translateY(-15px); /* makes the card move up when you hover over it */
}

/* Features */
.features-head img, .docs-head img {
    width: 200px;
    justify-self: flex-end; /* targets a specific item; flex-end pushes it to the end of the container */
}

.features-sub-head img {
    width: 300px;
    justify-self: flex-end;
}

.features-main .card > i {
    margin-right: 20px;
}

.features-main .grid {
    padding: 30px;
}

.features-main .grid > *:first-child {
    grid-column: 1 / span 3;
}

.features-main .grid >*:nth-child(2) {
    grid-column: 1 / span 2;
}

/* Docs */
.docs-main h3 {
    margin: 20px 0;
}

.docs-main .grid {
    grid-template-columns: 1fr 2fr; /* 1fr for the first item, 2fr for second, makes second item wider and first item smaller */
    align-items: flex-start; /* brings all items to start at the top */
}

.docs-main nav li {
    font-size: 17px;
    padding-bottom: 5px;
    margin-bottom: 5px;
    border-bottom: 1px #ccc solid;
}

.docs-main a:hover {
    font-weight: bold;
}


/* Footer */
.footer .social a {
    margin: 0 10px;
}

/* Animations */
/* Using CSS Keyframes and the transform and translate property */
@keyframes slideInFromLeft {
    /* 0% basically means "in the beginning", 100% means "at the end." for this example, we are starting off the page and then returning to the original position at the end */
    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes slideInFromRight {
    0% {
        transform: translateX(100%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes slideInFromTop {
    0% {
        transform: translateY(-100%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes slideInFromBottom {
    0% {
        transform: translateY(100%);
    }

    100% {
        transform: translateX(0);
    }
}

/* Media Queries */

/* Tablets and Under */
@media(max-width: 768px) {
    .grid, .showcase .grid, .stats .grid, .cli .grid, .cloud .grid, .features-main .grid, .docs-main .grid {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
    }

    .showcase {
        height: auto; /* takes up the height of the container */
    }

    .showcase-text {
        text-align: center;
        margin-top: 40px;
        animation: slideInFromTop 1s ease-in;
    }

    .showcase-form {
        justify-self: center; /* put on an actual grid or flex item to justify just that item */
        margin: auto;
        animation: slideInFromBottom 1s ease-in;
    }

    .cli .grid >*:first-child {
        grid-column: 1;
        grid-row: 1;
    }

    .features-head, .features-sub-head, .docs-head {
        text-align: center;
    }

    .features-head img, .features-sub-head img, .docs-head img {
        justify-self: center;
    }

    /* Fixes grid in the features page */
    .features-main .grid > *:first-child, .features-main .grid > *:nth-child(2) {
        grid-column: 1;
    }

}

/* Mobile */

@media(max-width: 500px) {
    .navbar {
        height: 110px; /* adding more height to the navbar so that the links can drop below the logo */
    }
    
    .navbar .flex { /* row by default, will set it as a column */
        flex-direction: column; /* Puts the logo on top of the nav */
    }

    .navbar ul {
        padding: 10px;
        background-color: rgba(0, 0, 0, 0.1);
    }


}